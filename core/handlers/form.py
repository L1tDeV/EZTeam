from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from core.utils.statesform import StepsForm
from core.handlers.find_form import db_people
from sqlite_aio.sqlite import create_user, edit_user
from sqlite_aio.sqlite import get_check_lst

async def get_form(message:Message, state:FSMContext):
    username = str(message.from_user.username)
    user_id = str(message.from_user.id)
    fl = await get_check_lst(user_id, username)
    if fl:
        await message.answer(f'{message.from_user.first_name}, –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω—è—Ç—å, –í–≤–µ–¥–∏ —Å–≤–æ–∏ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.')
        await state.set_state(StepsForm.GET_NAME)
    else:
        await message.answer(f'{message.from_user.first_name}, —ç—Ç–æ—Ç –±–æ—Ç –Ω–µ –¥–ª—è –≤–∞—Å :(')

async def get_name(message:Message, state:FSMContext):
    await message.answer(f'–¢–≤–æ–µ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª \r\n{message.text}\r\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ: 05.10.1998).')
    await state.update_data(name=message.text)
    await state.set_state(StepsForm.GET_BIRTHDAY)

async def get_birthday(message:Message, state:FSMContext):
    await message.answer(f'–¢–≤–æ—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: \r\n{message.text}\r\n–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ñ–æ—Ä–º–∞—Ç: +7-960-645-32-45).')
    await state.update_data(birthday=message.text)
    await state.set_state(StepsForm.GET_PHONE)

async def get_phone(message:Message, state:FSMContext):
    await message.answer(f'–¢–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω: \r\n{message.text}\r\n–í–≤–µ–¥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è.')
    await state.update_data(phone=message.text)
    await state.set_state(StepsForm.GET_PROJECTS)

async def get_age(message:Message, state:FSMContext):
    context_data = await state.get_data()
    name=context_data.get('name')
    phone=context_data.get('phone')
    birthday=context_data.get('birthday')
    projects = message.text
    data_user=f'–î–∞–Ω–Ω—ã–µ:\r\n\n'\
    f'–§–ò–û: {name}\r\n'\
    f'–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {birthday}\r\n'\
    f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\r\n'\
    f'–ü—Ä–æ–µ–∫—Ç—ã: {projects}\r\n'
    send_lst = []
    # for i in list(name.split()):
    #     send_lst.append(i)
    send_lst.append(name)
    send_lst.append(birthday)
    send_lst.append(phone)
    send_lst.append(projects)
    id_user = str(message.from_user.id)
    fl = await create_user(id_user, send_lst)
    # db_people.append(send_lst)
    # print(db_people)
    if fl:
        await message.answer(data_user)
        await message.answer(f'–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.üòâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.')
    else:
        fl = await edit_user(id_user, send_lst)
        if fl:
            await message.answer(data_user)
            await message.answer(f'–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã.üòâ')
        else:
            await message.answer(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö :(')
    await state.clear()