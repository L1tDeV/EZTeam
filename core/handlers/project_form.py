from aiogram import Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from core.utils.statesproject import ProjectSteps, CreateProject
from core.utils.callbackdata import QueryInfo
from sqlite_aio.sqlite import get_project_lst, get_check_lst, is_admin, create_project_db

# db_projects = ['–ü–∞—Ä–∫–æ–º–∞—Ç–∏–∫–∞']
# db_answers=['–ü–∞—Ä–∫–æ–º–∞—Ç–∏–∫–∞ - –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã –ø–∞—Ä–∫–æ–≤–æ–∫ –≤ –ú–æ—Å–∫–≤–µ, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ –∏ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö.|\n\n‚úîÔ∏è–ö–æ—Ç–æ–≤ –ê—Ä–∫–∞–¥–∏–π –î–º–∏—Ç—Ä–∏–µ–≤–∏—á']



def find_answer(project, db_projects,db_answers):
    if project in db_projects:
        need_el = list(db_answers[db_projects.index(project)].split('|'))
        return f'–í–æ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ <b>{project}</b>:\n\n{need_el[0]}\n\n–ü—Ä–æ–µ–∫—Ç–æ–º –∑–∞–Ω–∏–º–∞—é—Ç—Å—è:{need_el[1]}\n\n–£ –Ω–∏—Ö —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –∑–Ω–∞—é —è.'
    else:
        return f'–ß—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∏–ø–æ–º–∏–Ω–∞—é —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ü§î'

async def get_project_form(message:Message, state:FSMContext):
    username = str(message.from_user.username)
    user_id = str(message.from_user.id)
    fl = await get_check_lst(user_id, username)
    if fl:
        global db_projects, db_answers
        db_projects, db_answers = get_project_lst()
        lst_proj = ''
        for el in db_projects:
            lst_proj+='\n‚úîÔ∏è'+el
        answ = f'‚ú®–¢—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏? –•–æ—Ä–æ—à–æ, —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É.\n\nüåê–£ –Ω–∞—Å –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã:\n{lst_proj}\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ, –≤–≤–µ–¥–∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.'
        await message.answer(answ)
        await state.set_state(ProjectSteps.GET_PROJECT)
    else:
        await message.answer(f'{message.from_user.first_name}, —ç—Ç–æ—Ç –±–æ—Ç –Ω–µ –¥–ª—è –≤–∞—Å :(')

async def get_project(message:Message, state:FSMContext):
    txt=message.text
    await message.answer(find_answer(txt, db_projects,db_answers))
    await state.clear()

async def get_create_project_form(message:Message, state:FSMContext):
    username = str(message.from_user.username)
    user_id = str(message.from_user.id)
    fl_1 = await get_check_lst(user_id, username)
    fl = await is_admin(user_id, username)
    if fl and fl_1:
        await message.answer(f'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:')
        await state.set_state(CreateProject.GET_PROJECT)
    else:
        await message.answer(f'{message.from_user.first_name}, —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–µ –¥–ª—è –í–∞—Å :(')

async def get_create_project_descr(message:Message, state:FSMContext):
    await state.update_data(project=message.text)
    await message.answer(f'–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:')
    await state.set_state(CreateProject.GET_DESCR)

async def get_create_project_people(message:Message, state:FSMContext):
    await state.update_data(descr=message.text)
    await message.answer(f'–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ª—é–¥–µ–π, –∑–∞–Ω–∏–º–∞—é—â–∏—Ö—Å—è –ø—Ä–æ–µ–∫—Ç–æ–º —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å "|". –ù–∞–ø—Ä–∏–º–µ—Ä, –ß–µ–ª–æ–≤–µ–∫|–ß–µ–ª–æ–≤–µ–∫.')
    await state.set_state(CreateProject.GET_PEOPLE)

async def create_project(message:Message, state:FSMContext):
    data = await state.get_data()
    project = data.get('project')
    descr = data.get('descr')
    people = message.text
    fl = await create_project_db(project, descr, people)
    if fl:
        await message.answer(f'–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
    else:
        await message.answer(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ :(')
    await state.clear()