from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from core.utils.statesproject import ProjectSteps
from core.utils.callbackdata import QueryInfo

db_projects = ['–ü–∞—Ä–∫–æ–º–∞—Ç–∏–∫–∞']
db_answers=['–í–æ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ <b>–ü–∞—Ä–∫–æ–º–∞—Ç–∏–∫–∞</b>:\n–ü–∞—Ä–∫–æ–º–∞—Ç–∏–∫–∞ - –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã –ø–∞—Ä–∫–æ–≤–æ–∫ –≤ –ú–æ—Å–∫–≤–µ, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ –∏ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö.\n–ü—Ä–æ–µ–∫—Ç–æ–º –∑–∞–Ω–∏–º–∞—é—Ç—Å—è:\n\n‚úîÔ∏è–ê—Ä–∫–∞–¥–∏–π –ö–æ—Ç–æ–≤ +7-960-643-28-96\n\n–£ –Ω–∏—Ö —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –∑–Ω–∞—é —è.']

def find_answer(project, db_projects,db_answers):
    if project in db_projects:
        return f'{db_answers[db_projects.index(project)]}'
    else:
        return f'–ß—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∏–ø–æ–º–∏–Ω–∞—é —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ü§î'


async def get_project_form(message:Message, state:FSMContext):
    await message.answer(f'–¢—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏? –•–æ—Ä–æ—à–æ, —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É.\n–£ –Ω–∞—Å –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã:\n\nüÖøÔ∏è–ü–∞—Ä–∫–æ–º–∞—Ç–∏–∫–∞\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ, –≤–≤–µ–¥–∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.')
    await state.set_state(ProjectSteps.GET_PROJECT)

async def get_project(message:Message, state:FSMContext):
    txt=message.text
    await message.answer(find_answer(txt, db_projects,db_answers))
    await state.clear()